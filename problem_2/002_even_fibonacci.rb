# https://projecteuler.net/problem=2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def even_fibo_summer(upper_limit)
  f0 = 0
  f1 = 1
  sum = 0

  loop do
    f2 = f0 + f1
    break if f2 > upper_limit
    # puts "f2 is #{f2}"
    sum += f2 if (f2 % 2 == 0)
    # puts "  sum is #{sum}"
    f0 = f1
    f1 = f2
    # puts "    f0 is now #{f0} and f1 is now #{f1}"
  end

  puts "The sum of the even-valued Fibonacci numbers under #{upper_limit} is #{sum}."
end

even_fibo_summer(4e6)


# Pseudo
  # find new fibonacci number
  # f2 = f0 + f1
  
  # stop if f2 > 4 million
  # if f2 is even, add it to the ongoing sum

  # f0 = f1
  # f2 = f1